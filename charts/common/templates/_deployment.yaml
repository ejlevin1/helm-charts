{{- define "ejlevin1.deployment" -}}
{{ $root := $ }}
{{- if (.Values.image).repository }}
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta2
{{- end }}
kind: Deployment
metadata:
  name: {{ include "helm.name" . }}
  labels: {{- include "helm.labels" . | nindent 4 }}
  {{- if (.Values.deployment).annotations }}
  annotations:
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.replicaCount (not (.Values.autoscaling).enabled) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 5 }}
  {{- with .Values.deploymentStrategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "common.images.renderPullSecrets" ( dict "images" (list .Values.image) "context" $ ) | indent 6 }}
      {{- if (.Values.image).imagePullSecrets }}
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if (.Values.serviceAccount).name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- else }}
      securityContext: {}
      {{- end }}
      containers:
          {{- (print "- name: " (include "helm.name" .)) | trim | nindent 8 -}}
          {{- include "ejlevin1.containerBase" ( dict "containerRoot" .Values "Root" $root ) | nindent 10 }}
          {{- include "ejlevin1.containerLifecycle" ( dict "containerRoot" .Values "Root" $root ) | nindent 10 }}
          {{- include "ejlevin1.containerProbes" ( dict "containerRoot" .Values "Root" $root ) | nindent 10 }}
          {{- include "ejlevin1.containerVolumeMounts" ( dict "containerRoot" .Values "Root" $root ) | nindent 10 }}
      {{- if (.Values.sidecar).enabled }}
          {{- (print "- name: " (required "A sidecar container name is required." .Values.sidecar.name)) | trim | nindent 8 }}
          {{- include "ejlevin1.containerBase" ( dict "containerRoot" .Values.sidecar "Root" $root ) | nindent 10 }}
          {{- include "ejlevin1.containerVolumeMounts" ( dict "containerRoot" .Values.sidecar "Root" $root ) | nindent 10 }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- range .Values.initContainers }}
            {{- (print "- name: " (required "An init container name is required." .name)) | trim | nindent 8 }}
            {{- include "ejlevin1.containerBase" ( dict "containerRoot" . "Root" $root ) | nindent 10 }}
            {{- include "ejlevin1.containerVolumeMounts" ( dict "containerRoot" . "Root" $root ) | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "ejlevin1.pod.volumeMounts" ( dict "containerRoot" .Values "Root" $root ) | indent 6 }}
{{- end -}}
{{- end -}}