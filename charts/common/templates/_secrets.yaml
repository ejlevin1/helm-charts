{{- define "ejlevin1.secrets" }}
  {{ $root := $ }}
  {{- if .Values.secrets }}
    {{- if kindIs "map" .Values.secrets }}
      {{- range $secret, $items := .Values.secrets }}
        {{- include "ejlevin1.opaque-secret" (dict "root" $root "secret" (dict "name" $secret "items" $items)) | nindent 0 }}
      {{- end }}
    {{- else if kindIs "slice" .Values.secrets }}
      {{- range $secret := .Values.secrets }}
        {{- if eq "opaque" ($secret.type | default "opaque") }}
          {{- include "ejlevin1.opaque-secret" (dict "root" $root "secret" $secret) | nindent 0 }}
        {{- else if eq "dockerconfigjson" $secret.type }}
          {{- include "ejlevin1.dockerconfigjson-secret" (dict "root" $root "secret" $secret) | nindent 0 }}
        {{- else }}
          {{- fail (print "Unknown secret type [" $secret.type "].  Handled types are [opaque,dockerconfigjson]") }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}

{{- define "ejlevin1.opaque-secret" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ required "Secret name is required." .secret.name }}
  {{- if .secret.annotations }}
  {{- with .secret.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  labels:
    {{- include "helm.labels" .root | nindent 4 }}
    {{- if .secret.labels }}
      {{- toYaml .secret.labels | nindent 4 }}
    {{- end }}
type: "Opaque"
data: 
{{- range $key, $value := .secret.items }}
  {{- if kindIs "string" $value }}
    {{- $key | nindent 2 }}: | 
      {{- $value | b64enc | nindent 4 }}
  {{- else if kindIs "map" $value }}
    {{- $key | nindent 2 }}: |
      {{- if eq $value.format "raw" -}}
        {{- tpl $value.template $ | nindent 4 }}
      {{- else -}}
        {{- tpl $value.template $ | fromJson | toJson | nindent 4 }}
      {{- end -}}
  {{- else }}
    {{- fail (list "Unknown secret type [" (kindOf $value) "]" | join "") }}
  {{- end }}
{{- end }}
---
{{- end }}

{{- define "ejlevin1.dockerconfigjson-secret" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ required "Secret name is required." .secret.name }}
  {{- if .secret.annotations }}
  {{- with .secret.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  labels:
    {{- include "helm.labels" .root | nindent 4 }}
type: "kubernetes.io/dockerconfigjson"
data: 
  .dockerconfigjson: {{ template "dockerconfigjson.b64enc" .secret }}
---
{{- end }}

# See reference: https://github.com/jitterbit/charts/blob/master/charts/dockerconfigjson/templates/_helpers.tpl
{{/*
  Generate the .dockerconfigjson file unencoded.
*/}}
{{- define "dockerconfigjson.b64dec" }}
  {{- print "{\"auths\":{" }}
  {{- range $index, $item := .imageCredentials }}
    {{- if $index }}
      {{- print "," }}
    {{- end }}
    {{- printf "\"%s\":{\"auth\":\"%s\"}" (default "https://index.docker.io/v1/" $item.registry) (printf "%s:%s" $item.username $item.accessToken | b64enc) }}
  {{- end }}
  {{- print "}}" }}
{{- end }}

{{/*
  Generate the base64-encoded .dockerconfigjson.
  See https://github.com/helm/helm/issues/3691#issuecomment-386113346
*/}}
{{- define "dockerconfigjson.b64enc" }}
  {{- include "dockerconfigjson.b64dec" . | b64enc }}
{{- end }}