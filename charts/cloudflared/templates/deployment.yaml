apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: {{ .Values.replicaCount | default 1 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: cloudflared
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:2024.2.1
        args:
          - tunnel
          - --no-autoupdate
          - --metrics=0.0.0.0:2000
          # Points cloudflared to the config file, which configures what
          # cloudflared will actually do. This file is created by a ConfigMap.
          - --config
          - /etc/cloudflared/config/config.yaml
          - run
          - --token
          - {{ .Values.tunnel.token }}
        livenessProbe:
          httpGet:
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /ready
            port: 2000
            scheme: HTTP
          failureThreshold: 60
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
      volumes:
      # Create a config.yaml file from the ConfigMap below.
      - name: config
        configMap:
          name: cloudflared
          items:
          - key: config.yaml
            path: config.yaml
